<launch>
<arg name="odom_topic" value="/airsim_node/drone_1/odom_local_enu" />

<!-- AirSim ROS Wrapper -->
	<include file="$(find airsim_ros_pkgs)/launch/airsim_node.launch">
		<arg name="output" value="log"/>
		<arg name="host" value="129.31.139.24"/>
	</include>
<!-- Vehicle Dynamic Constraints -->
	<include file="$(find airsim_ros_pkgs)/launch/dynamic_constraints.launch"/>
<!-- Simple PID Position Controller -->
	<!--<include file="$(find airsim_ros_pkgs)/launch/position_controller_simple.launch"/>-->
-->

  <arg name="map_size_x" value="100.0"/>
  <arg name="map_size_y" value="100.0"/>
  <arg name="map_size_z" value="4"/>

  <!-- topic of your odometry such as VIO or LIO -->

    <node pkg="tf" type="static_transform_publisher" name="tf_53" args="0 0 0 0 0 0 world navigation 100" />
    <node pkg="tf" type="static_transform_publisher" name="tf_world_to_enu" args="0 0 0 0 0 0 world world_enu 100" />

  <!-- main algorithm params -->
  <include file="$(find exploration_manager)/launch/algorithm_semantic.xml">

    <arg name="map_size_x_" value="$(arg map_size_x)"/>
    <arg name="map_size_y_" value="$(arg map_size_y)"/>
    <arg name="map_size_z_" value="$(arg map_size_z)"/>
    <arg name="odometry_topic" value="$(arg odom_topic)"/>

    <!-- sensor pose: transform of camera frame in the world frame -->
    <arg name="sensor_pose_topic" value="/transform_rgb_frame"/>
    <!-- depth topic: depth image, 640x480 by default -->
    <!-- cloud topic: point cloud measurement  -->
    <!-- subscribe ONLY TO ONE of the two topics -->
    <arg name="depth_topic" value="/airsim_node/drone_1/front_center_custom/DepthPlanner"/>
    <arg name="semantic_topic" value="/airsim_node/drone_1/front_center_custom/Infrared"/>
    <arg name="cloud_topic" value="/pcl_render_node/cloud"/>

    <!-- intrinsic params of the depth camera -->
    <arg name="cx" value="160.0"/>
    <arg name="cy" value="120.0"/>
    <arg name="fx" value="112.033203125"/>
    <arg name="fy" value="112.033203125"/>

    <!-- maximum velocity and acceleration the drone will reach -->
    <arg name="max_vel" value="1.0" />
    <arg name="max_acc" value="1.0" />
  </include>

  <node name="rvizesdfvisualisation" pkg="rviz" type="rviz" output="log" args="-d $(find my_pipeline)/cfg/airsim_semantic_esdf.rviz" />

  <node pkg="waypoint_generator" name="waypoint_generator" type="waypoint_generator" output="screen">
    <remap from="~odom" to="$(arg odom_topic)"/>
    <remap from="~goal" to="/move_base_simple/goal"/>
    <remap from="~traj_start_trigger" to="/traj_start_trigger" />
    <param name="waypoint_type" value="point"/>
  </node>

  <node pkg="plan_manage" name="traj_server" type="traj_server" output="screen">
    <remap from="/position_cmd" to="/planning/pos_cmd"/>

    <remap from="/odom_world" to="$(arg odom_topic)"/>
    <param name="traj_server/time_forward" value="1.5" type="double"/>
    <param name="traj_server/pub_traj_id" value="4" type="int"/>

    <param name="perception_utils/top_angle" value="0.56125" type="double"/>
    <param name="perception_utils/left_angle" value="0.69222" type="double"/>
    <param name="perception_utils/right_angle" value="0.68901" type="double"/>
    <param name="perception_utils/max_dist" value="4.5" type="double"/>
    <param name="perception_utils/vis_dist" value="1.0" type="double"/>

  </node>

 <node pkg="nodelet" type="nodelet" args="standalone airsim_controller/AirsimControllerNodelet" name="airsim_controller" required="true" output="screen">
        <remap from="~odom" to="$(arg odom_topic)"/>
        <remap from="~position_cmd" to="/planning/pos_cmd"/>
        <remap from="~motors" to="motors"/>
        <remap from="~takeoff" to="/airsim_node/drone_1/takeoff"/>
        <remap from="~corrections" to="corrections"/>
        <remap from="~so3_cmd" to="so3_cmd"/>
        <rosparam file="$(find so3_control)/config/gains_hummingbird.yaml"/>
        <rosparam file="$(find so3_control)/config/corrections_hummingbird.yaml"/>
        <param name="mass" value="0.74"/>
        <param name="use_angle_corrections " value="false"/>
        <param name="use_external_yaw "      value="false"/>
        <param name="gains/rot/z" value="1.0"/>
        <param name="gains/ang/z" value="0.1"/>
  </node>

</launch>
