<launch>
<arg name="odom_topic" value="/airsim_node/drone_1/odom_local_enu" />

    <arg name="vocabulary_path" default="$(find orb_slam2_cuda)/Vocabulary/ORBvoc.txt" />
    <arg name="camera_setting_path" default="$(find my_pipeline)/calibration/TUM1_rect.yaml" />
    <arg name="bUseViewer" default="true" />
    <arg name="bEnablePublishROSTopic" default="true" />

    <arg name="namespace" default="flame" />
    <arg name="manager" default="manager" />
    <arg name="standalone" default="true" />
    <arg name="output_dest" default="screen" />
    <arg name="load_params" default="true" />
    <arg name="param_file" default="flame_nodelet.yaml" />
    <arg name="bag_data" default="false" />

  <arg name="map_size_x" value="100.0"/>
  <arg name="map_size_y" value="100.0"/>
  <arg name="map_size_z" value="3.0"/>

  <!-- topic of your odometry such as VIO or LIO -->

    <node pkg="tf" type="static_transform_publisher" name="tf_53" args="0 0 0 0 0 0 world navigation 100" />
    <node pkg="tf" type="static_transform_publisher" name="tf_world_to_enu" args="0 0 0 0 0 0 world world_enu 100" />

    <group ns="$(arg namespace)" >
      <arg name="world_frame_id" default="world" />
      <arg name="camera_world_frame_id" default="camera_world" />
          <node pkg="tf2_ros" type="static_transform_publisher" name="camera_world_to_world"
               args="0.0 0.0 0.0 0.5 -0.5 0.5 -0.5 $(arg world_frame_id) $(arg camera_world_frame_id)" >
          </node>
        <!-- Launch the nodelet manager. -->
        <node if="$(arg standalone)"
              pkg="nodelet" type="nodelet" name="$(arg manager)"
              args="manager" output="$(arg output_dest)" >
        </node>

       <node name="orb_slam_nodelet" pkg="nodelet" type="nodelet" output="screen" args="load orb_slam2_cuda/ORBSLAMNodelet $(arg manager)">
            <param name="voc_file" value="$(arg vocabulary_path)"/>
            <param name="settings_file" value="$(arg camera_setting_path)"/>
            <remap from="/camera/image_raw" to="/airsim_node/drone_1/front_center_custom/Scene"/>
            <remap from="/odometry" to="/orb_slam2/odometry"/>
            <remap from="/transform" to="/orb_slam2/transform"/>
        </node>

        <!-- Launch the nodelet.. -->
        <node pkg="nodelet" type="nodelet" name="flame_nodelet"
              args="load flame_ros/FlameNodelet $(arg manager)"
              output="$(arg output_dest)" launch-prefix="bash -c 'sleep 4; $0 $@' ">
          <rosparam command="load" if="$(arg load_params)" file="$(find my_pipeline)/cfg/$(arg param_file)"/>
          <remap from="/image" to="/airsim_node/drone_1/front_center_custom/Scene" />
         <remap from="/info" to="/airsim_node/drone_1/front_center_custom/Scene/camera_info" />
          <remap from="/transform" to="/orb_slam2/transform"/>
          <remap from="keyframes" to="keyframes" />
        </node>

          <include file="$(find exploration_manager)/launch/algorithm_semantic_nodelet.xml">

            <arg name="map_size_x_" value="$(arg map_size_x)"/>
            <arg name="map_size_y_" value="$(arg map_size_y)"/>
            <arg name="map_size_z_" value="$(arg map_size_z)"/>
            <arg name="odometry_topic" value="$(arg /orb_slam2/odometry)"/>

            <!-- sensor pose: transform of camera frame in the world frame -->
            <arg name="sensor_pose_topic" value="/transform_rgb_frame"/>
            <!-- depth topic: depth image, 640x480 by default -->
            <!-- cloud topic: point cloud measurement  -->
            <!-- subscribe ONLY TO ONE of the two topics -->
            <arg name="depth_topic" value="/flame/depth_registered/image_rect"/>
            <arg name="semantic_topic" value="/airsim_node/drone_1/front_center_custom/Infrared"/>
            <arg name="cloud_topic" value="/none"/>

            <!-- intrinsic params of the depth camera -->
            <arg name="cx" value="160.0"/>
            <arg name="cy" value="120.0"/>
            <arg name="fx" value="112.033203125"/>
            <arg name="fy" value="112.033203125"/>

            <!-- maximum velocity and acceleration the drone will reach -->
            <arg name="max_vel" value="0.5" />
            <arg name="max_acc" value="0.5" />
          </include>

          <!-- AirSim ROS Wrapper -->
          	<include file="$(find my_airsim_pkgs)/launch/airsim_node.launch">
          		<arg name="output" value="screen"/>
          		<arg name="host" value="129.31.139.24"/>
          	</include>
          <!-- Vehicle Dynamic Constraints -->
          	<include file="$(find airsim_ros_pkgs)/launch/dynamic_constraints.launch"/>

    </group>



  <!-- main algorithm params -->

  <node name="rvizesdfvisualisation" pkg="rviz" type="rviz" output="log" args="-d $(find my_pipeline)/cfg/airsim_semantic_esdf.rviz" />

  <node pkg="waypoint_generator" name="waypoint_generator" type="waypoint_generator" output="screen">
    <remap from="~odom" to="$(arg odom_topic)"/>
    <remap from="~goal" to="/move_base_simple/goal"/>
    <remap from="~traj_start_trigger" to="/traj_start_trigger" />
    <param name="waypoint_type" value="point"/>
  </node>

  <node pkg="plan_manage" name="traj_server" type="traj_server" output="screen">
    <remap from="/position_cmd" to="/planning/pos_cmd"/>

    <remap from="/odom_world" to="$(arg odom_topic)"/>
    <param name="traj_server/time_forward" value="1.5" type="double"/>
    <param name="traj_server/pub_traj_id" value="4" type="int"/>

    <param name="perception_utils/top_angle" value="0.56125" type="double"/>
    <param name="perception_utils/left_angle" value="0.69222" type="double"/>
    <param name="perception_utils/right_angle" value="0.68901" type="double"/>
    <param name="perception_utils/max_dist" value="4.5" type="double"/>
    <param name="perception_utils/vis_dist" value="1.0" type="double"/>

  </node>

  <node pkg="nodelet" type="nodelet" args="standalone airsim_controller/AirsimControllerNodelet" name="airsim_controller" required="true" output="screen">
        <remap from="~odom" to="$(arg odom_topic)"/>
        <remap from="~position_cmd" to="/planning/pos_cmd"/>
        <remap from="~motors" to="motors"/>
        <remap from="~takeoff" to="/airsim_node/drone_1/takeoff"/>
        <remap from="~corrections" to="corrections"/>
        <remap from="~so3_cmd" to="so3_cmd"/>
        <rosparam file="$(find so3_control)/config/gains_hummingbird.yaml"/>
        <rosparam file="$(find so3_control)/config/corrections_hummingbird.yaml"/>
        <param name="mass" value="0.74"/>
        <param name="use_angle_corrections " value="false"/>
        <param name="use_external_yaw "      value="false"/>
        <param name="gains/rot/z" value="1.0"/>
        <param name="gains/ang/z" value="0.1"/>
  </node>

</launch>