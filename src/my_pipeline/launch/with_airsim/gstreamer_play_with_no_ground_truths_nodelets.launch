<launch>
<arg name="odom_topic" value="/orb_slam2_cuda/odometry" />

    <arg name="vocabulary_path" default="$(find orb_slam2_cuda)/Vocabulary/ORBvoc.txt" />
    <arg name="camera_setting_path" default="$(find my_pipeline)/calibration/s20_wide.yaml" />
    <arg name="bUseViewer" default="true" />
    <arg name="bEnablePublishROSTopic" default="true" />

    <arg name="manager" default="manager" />
    <arg name="output_dest" default="screen" />
    <arg name="load_params" default="true" />
    <arg name="param_file" default="flame_nodelet_airsim.yaml" />
    <arg name="bag_data" default="false" />

  <arg name="map_size_x" value="100.0"/>
  <arg name="map_size_y" value="100.0"/>
  <arg name="map_size_z" value="3.0"/>

  <!-- topic of your odometry such as VIO or LIO -->

    <node pkg="tf" type="static_transform_publisher" name="tf_53" args="0 0 0 0 0 0 world navigation 100" />
    <node pkg="tf" type="static_transform_publisher" name="tf_world_to_enu" args="0 0 0 0 0 0 world world_enu 100" />

      <arg name="world_frame_id" default="world" />
      <arg name="camera_world_frame_id" default="camera_world" />
          <node pkg="tf2_ros" type="static_transform_publisher" name="camera_world_to_world"
               args="0.0 0.0 0.0 0.5 -0.5 0.5 -0.5 $(arg world_frame_id) $(arg camera_world_frame_id)" >
          </node>
        <!-- Launch the nodelet manager. -->
        <node
              pkg="nodelet" type="nodelet" name="$(arg manager)"
              args="manager" output="$(arg output_dest)" >
        </node>

        <node pkg="nodelet" type="nodelet"
            name="GSCamNodelet"
            args="load gscam/GSCamNodelet standalone_nodelet"
            output="screen">
            <param name="camera_name" value="default"/>
            <param name="camera_info_url" value="package://gscam/examples/uncalibrated_parameters.ini"/>
            <param name="gscam_config" value=value="rtspsrc location=rtsp://192.168.1.99:5554/playlist.m3u latency=100  ! typefind ! rtph264depay ! h264parse ! avdec_h264 ! videoconvert"/>
            <param name="frame_id" value="/v4l_frame"/>
            <param name="sync_sink" value="true"/>
          </node>

        <node pkg="nodelet" type="nodelet" name="rectify_color"
              args="load image_proc/rectify $(arg manager) $(arg bond)"
      	respawn="$(arg respawn)">
          <remap from="image_mono" to="image_color" />
          <remap from="image_rect" to="image_rect_color" />
        </node>

      <node name="orb_slam2_cuda" pkg="nodelet" type="nodelet" output="screen" args="load orb_slam2_cuda/ORBSLAMNodelet /$(arg manager)">
    	    <param name="vocabulary_path" value="$(arg vocabulary_path)"/>
    	    <param name="camera_setting_path" value="$(arg camera_setting_path)"/>
            <remap from="/camera/image_raw" to="/$(arg cam_name)/image_rect"/>
            <remap from="/transform" to="/orb_slam2/transform"/>
        </node>

<group ns = "flame">
        <node pkg="nodelet" type="nodelet" name="flame_nodelet"
              args="load flame_ros/FlameNodelet /$(arg manager)"
              output="$(arg output_dest)" >
          <rosparam command="load" if="$(arg load_params)" file="$(find my_pipeline)/cfg/$(arg param_file)"/>
          <remap from="/image" to="/$(arg cam_name)/image_rect" />
         <remap from="/info" to="/$(arg cam_name)/camera_info" />
          <remap from="/transform" to="/orb_slam2/transform"/>
          <remap from="keyframes" to="keyframes" />
        </node>
</group>
        <include file="$(find my_pipeline)/launch/algorithm_only_esdf_nodelet.xml">
            <arg name="manager" value="$(arg manager)"/>

            <arg name="map_size_x_" value="$(arg map_size_x)"/>
            <arg name="map_size_y_" value="$(arg map_size_y)"/>
            <arg name="map_size_z_" value="$(arg map_size_z)"/>
            <arg name="odometry_topic" value="$(arg odom_topic)"/>

            <!-- sensor pose: transform of camera frame in the world frame -->
            <arg name="sensor_pose_topic" value="/transform_rgb_frame"/>
            <!-- depth topic: depth image, 640x480 by default -->
            <!-- cloud topic: point cloud measurement  -->
            <!-- subscribe ONLY TO ONE of the two topics -->
            <arg name="depth_topic" value="/flame/depth_registered/image_rect"/>
            <arg name="semantic_topic" value="/airsim_node/drone_1/front_center_custom/Infrared"/>
            <arg name="cloud_topic" value="/none"/>

            <!-- intrinsic params of the depth camera -->
            <arg name="cx" value="322.47248"/>
            <arg name="cy" value="247.22683"/>
            <arg name="fx" value="255.47336"/>
            <arg name="fy" value="257.20206"/>
          </include>


  <node name="performance_meter" pkg="my_pipeline" type="performance_meter" output="screen"/>

  <node name="rvizesdfvisualisation" pkg="rviz" type="rviz" output="log" args="-d $(find my_pipeline)/cfg/airsim_semantic_esdf.rviz" />



</launch>