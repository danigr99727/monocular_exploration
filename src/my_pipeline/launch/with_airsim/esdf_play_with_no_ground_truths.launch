<launch>
<arg name="odom_topic" value="/orb_slam2_cuda/odometry" />

    <arg name="vocabulary_path" default="$(find orb_slam2_cuda)/Vocabulary/ORBvoc.txt" />
    <arg name="camera_setting_path" default="$(find my_pipeline)/calibration/airsim.yaml" />
    <arg name="bUseViewer" default="true" />
    <arg name="bEnablePublishROSTopic" default="true" />


   <node name="orb_slam2_cuda" pkg="orb_slam2_cuda" type="Mono" output="screen">
    	<param name="vocabulary_path" value="$(arg vocabulary_path)"/>
    	<param name="camera_setting_path" value="$(arg camera_setting_path)"/>
    	<remap from="/camera/image_raw" to="/airsim_node/drone_1/front_center_custom/Scene"/>
    	<!--<remap from="/odometry" to="$(arg odom_topic)"/>-->
    	<remap from="/transform" to="/orb_slam2/transform"/>
  	</node>

    <!-- from flame nodelet launch -->

    <arg name="namespace" default="flame" />
    <arg name="manager" default="manager" />
    <arg name="standalone" default="true" />
    <arg name="output_dest" default="screen" />
    <arg name="load_params" default="true" />
    <arg name="param_file" default="flame_nodelet_airsim.yaml" />
    <arg name="bag_data" default="false" />

    <group ns="$(arg namespace)" >
      <arg name="world_frame_id" default="world" />
      <arg name="camera_world_frame_id" default="camera_world" />
          <node pkg="tf2_ros" type="static_transform_publisher" name="camera_world_to_world"
               args="0.0 0.0 0.0 0.5 -0.5 0.5 -0.5 $(arg world_frame_id) $(arg camera_world_frame_id)" >
          </node>
        <!-- Launch the nodelet manager. -->
        <node if="$(arg standalone)"
              pkg="nodelet" type="nodelet" name="$(arg manager)"
              args="manager" output="$(arg output_dest)" >
        </node>
        <!-- Launch the nodelet.. -->
        <node pkg="nodelet" type="nodelet" name="flame_nodelet"
              args="load flame_ros/FlameNodelet $(arg manager)"
              output="$(arg output_dest)" launch-prefix="bash -c 'sleep 1; $0 $@' ">
          <rosparam command="load" if="$(arg load_params)" file="$(find my_pipeline)/cfg/$(arg param_file)"/>
          <remap from="/image" to="/airsim_node/drone_1/front_center_custom/Scene" />
         <remap from="/info" to="/airsim_node/drone_1/front_center_custom/Scene/camera_info" />
          <remap from="/transform" to="/orb_slam2/transform"/>
          <remap from="keyframes" to="keyframes" />
        </node>
    </group>

<!-- AirSim ROS Wrapper -->
	<include file="$(find airsim_ros_pkgs)/launch/airsim_node.launch">
		<arg name="output" value="log"/>
		<arg name="host" value="129.31.139.24"/>
	</include>
<!-- Vehicle Dynamic Constraints -->
	<include file="$(find airsim_ros_pkgs)/launch/dynamic_constraints.launch"/>
<!-- Simple PID Position Controller -->
	<!--<include file="$(find airsim_ros_pkgs)/launch/position_controller_simple.launch"/>-->
-->

  <arg name="map_size_x" value="100.0"/>
  <arg name="map_size_y" value="100.0"/>
  <arg name="map_size_z" value="3.0"/>

  <!-- topic of your odometry such as VIO or LIO -->

    <node pkg="tf" type="static_transform_publisher" name="tf_53" args="0 0 0 0 0 0 world navigation 100" />
    <node pkg="tf" type="static_transform_publisher" name="tf_world_to_enu" args="0 0 0 0 0 0 world world_enu 100" />

  <!-- main algorithm params -->
      <node name="rvizfiestavisualisation" pkg="rviz" type="rviz" output="log" args="-d $(find my_pipeline)/cfg/flame.rviz" />

  <include file="$(find my_pipeline)/launch/algorithm_only_esdf.xml">

    <arg name="map_size_x_" value="$(arg map_size_x)"/>
    <arg name="map_size_y_" value="$(arg map_size_y)"/>
    <arg name="map_size_z_" value="$(arg map_size_z)"/>
    <arg name="odometry_topic" value="$(arg odom_topic)"/>

    <!-- sensor pose: transform of camera frame in the world frame -->
    <arg name="sensor_pose_topic" value="/transform_rgb_frame"/>
    <!-- depth topic: depth image, 640x480 by default -->
    <!-- cloud topic: point cloud measurement  -->
    <!-- subscribe ONLY TO ONE of the two topics -->
    <arg name="depth_topic" value="/flame/depth_registered/image_rect"/>
    <arg name="semantic_topic" value="/airsim_node/drone_1/front_center_custom/Infrared"/>
    <arg name="cloud_topic" value="/none"/>

    <!-- intrinsic params of the depth camera -->
    <arg name="cx" value="320.0"/>
    <arg name="cy" value="240.0"/>
    <arg name="fx" value="224.066203125"/>
    <arg name="fy" value="224.066203125"/>

    <!-- maximum velocity and acceleration the drone will reach -->
    <arg name="max_vel" value="0.5" />
    <arg name="max_acc" value="0.5" />
  </include>

  <node name="performance_meter" pkg="my_pipeline" type="performance_meter" output="screen"/>

  <node name="rvizesdfvisualisation" pkg="rviz" type="rviz" output="log" args="-d $(find my_pipeline)/cfg/airsim_groundtruth_esdf.rviz" />

</launch>